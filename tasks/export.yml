---

# ---------------------------------------------------------
# Install requirements
# ---------------------------------------------------------

- name: Install postgresql client
  package:
    name: postgresql
  become: yes
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version|int >= 8

- name: Install awxkit
  pip:
    name: awxkit=={{ awx_credentials_awxkit }}
    executable: pip3
  become: yes


# ---------------------------------------------------------
# Retrieve credential information (no secrets)
# ---------------------------------------------------------

- name: Get overview of all credentials
  command: >-
    {{ awx_credentials_cmd }} credentials list
  environment:
    TOWER_HOST: "{{ awx_credentials['api']['url'] }}"
    TOWER_USERNAME: "{{ awx_credentials['api']['user'] }}"
    TOWER_PASSWORD: "{{ awx_credentials['api']['password'] }}"
    TOWER_VERIFY_SSL: "{{ awx_credentials['api']['validate_certs'] }}"
  changed_when: false
  ignore_errors: true
  register: _awx_credentials
  # delegate_to: awx_decrypt

# ---------------------------------------------------------
# Retrieve credential secrets
# ---------------------------------------------------------

- name: Perform query for all credentials
  command: >-
    psql --host={{ awx_credentials['db']['host'] }}
         --port={{ awx_credentials['db']['port'] }}
         --dbname={{ awx_credentials['db']['name'] }}
         --username={{ awx_credentials['db']['user'] }}
         --command="copy (select * from main_credential) To STDOUT With CSV DELIMITER ',' HEADER;"
  changed_when: false
  register: _psql_csv
  environment:
    PGPASSWORD: "{{ awx_credentials['db']['password'] }}"
    PATH: "{{ ansible_env.PATH }}:/opt/rh/rh-postgresql10/root/usr/bin"
    LD_LIBRARY_PATH: "{{ ansible_env.PATH }}:/opt/rh/rh-postgresql10/root/usr/lib64"
    LIBRARY_PATH: "{{ ansible_env.PATH }}:/opt/rh/rh-postgresql10/root/usr/lib64"

- name: Create tempfile
  tempfile:
  changed_when: false
  register: _tempfile

- name: Write query results to csv file
  copy:
    content: "{{ _psql_csv.stdout }}"
    dest: "{{ _tempfile.path }}"
    mode: "0600"
  changed_when: false

- name: Read csvfile into ansible
  read_csv:
    path: "{{ _tempfile.path }}"
  register: creds

- name: Delete temporary csv file
  file:
    path: "{{ _tempfile.path }}"
    state: absent
  changed_when: false


# ---------------------------------------------------------
# Process & write credential data
# ---------------------------------------------------------

- name: Create output location {{ awx_credentials_dest }}
  file:
    path: "{{ awx_credentials_dest }}"
    state: directory
    mode: "0700"
  delegate_to: localhost
  become: no

- name: Decrypt all crypted values
  include_tasks:
    file: decrypt.yml
    apply:
      delegate_to: awx_decrypt
  loop: "{{ creds.list }}"
  loop_control:
    loop_var: outer
    label:
      - "{{ outer.name }}"

- name: Write credential information to file
  copy:
    content: "{{ _awx_credentials.stdout | from_json | json_query('results') | to_nice_json }}"
    dest: "{{ awx_credentials_dest }}/credential-export.json"
    mode: "0600"
  delegate_to: localhost
  connection: local

- name: Write credential secrets to file
  copy:
    content: "{{ awx_credentials_list | to_nice_json }}"
    dest: "{{ awx_credentials_dest }}/credential-secrets.json"
    mode: '0600'
  delegate_to: localhost
  become: no
